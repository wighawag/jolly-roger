{
  "name": "jolly-roger",
  "version": "0.0.1",
  "description": "Template to develop fully decentralised app and games",
  "private": true,
  "type": "module",
  "devDependencies": {
    "ask-env": "^0.0.1",
    "ldenv": "^0.3.9",
    "prettier": "^3.1.0",
    "syncpack": "^11.2.1",
    "vitepress": "1.0.0-rc.31"
  },
  "scripts": {
    "preinstall": "npx only-allow pnpm",
    "---------------------- INSTALL ----------------------": "",
    "boot": "npx change-name@0.3.1 --ask jolly-roger && pnpm i",
    "set-name": "npx change-name@0.3.1 --ask jolly-roger",
    "template-test": "pnpm --filter ./contracts local_node & pnpm run --filter ./contracts deploy localhost ~~ pnpm export -n localhost --ts ../indexer/src/contracts.ts,../web/src/data/contracts.ts ~~ && pnpm run --filter ./common build && pnpm --filter ./indexer build",
    "sync-deps": "syncpack fix-mismatches && pnpm -r format:fix",
    "update-deps": "pnpm update -r -i --latest && pnpm sync-deps",
    "---------------------- FORMAT ----------------------": "",
    "format": "prettier --write . && pnpm -r format",
    "format:check": "prettier --check . && pnpm -r format:check",
    "---------------------- INTERNAL ----------------------": "",
    "_contracts:deploy:watch": "pnpm --filter ./contracts deploy:watch $MODE ~~ pnpm run export -n $MODE --ts ../indexer/src/contracts.ts,../web/src/data/contracts.ts ~~",
    "_contracts:deploy": "pnpm run --filter ./contracts deploy $MODE  ~~ pnpm run export -n $MODE  --ts ../indexer/src/contracts.ts,../web/src/data/contracts.ts ~~",
    "---------------------- UTILITIES ----------------------": "",
    "local_node": "ldenv pnpm --filter ./contracts local_node",
    "contracts:compile": "pnpm --filter ./contracts compile",
    "contracts:compile:watch": "pnpm --filter ./contracts compile:watch",
    "web:dev": "pnpm --filter ./web dev",
    "indexer:dev": "pnpm --filter ./indexer dev",
    "common:dev": "pnpm --filter ./common dev",
    "contracts:export": "ldenv -d localhost pnpm run --filter ./contracts export -n @@MODE --ts ../indexer/src/contracts.ts,../web/src/data/contracts.ts @@",
    "contracts:test": "pnpm --filter ./contracts test",
    "contracts:execute": "pnpm --filter ./contracts execute",
    "contracts:docs": "ldenv -d localhost pnpm run --filter ./contracts docgen @@MODE -o ../docs/contracts",
    "indexer:build": "ldenv pnpm run contracts:export @@MODE ~~ pnpm run --filter ./common build ~~ pnpm run --filter ./indexer build ~~ @@",
    "indexer:index": "ldenv pnpm run indexer:build @@MODE ~~ pnpm --filter ./indexer index-to-file -n @@ETH_NODE_URI_:MODE,ETH_NODE_URI@:''@: -d src/contracts.ts -f ../web/static/indexed-state-@@MODE@:.json ~~ @@",
    "fuzd:dev": "pnpm --filter ./helper-services/fuzd dev",
    "---------------------- DOCS ----------------------": "",
    "docs:dev": "pnpm contracts:docs && vitepress dev docs",
    "docs:build": "pnpm contracts:docs && vitepress build docs",
    "docs:preview": "vitepress preview docs",
    "---------------------- WEB USING EXISTING DEPLOYMENT ----------------------": "",
    "zellij-attach": "zellij --layout dev/zellij-attach.kdl a ${npm_package_name}-attach-$MODE || zellij --layout dev/zellij-attach.kdl -s ${npm_package_name}-attach-$MODE",
    "attach": "ldenv -d localhost pnpm run indexer:index @@MODE ~~ pnpm run zellij-attach ~~ @@",
    "---------------------- FULL AGAINST AN EXISTING NETWORK ----------------------": "",
    "zellij-remote": "zellij --layout dev/zellij-remote.kdl a ${npm_package_name}-remote-$MODE || zellij --layout dev/zellij-remote.kdl -s ${npm_package_name}-remote-$MODE",
    "remote": "ldenv pnpm run zellij-remote @@",
    "---------------------- DEPLOY ----------------------": "",
    "build": "ldenv -d sepolia pnpm run indexer:index @@MODE ~~ pnpm run --filter ./web build ~~ @@",
    "serve": "pnpm --filter ./web serve",
    "contracts:deploy": "ldenv -d localhost pnpm _contracts:deploy @@",
    "contracts:deploy:prepare": "ldenv -d localhost ask-env -f contracts/.env.local ETH_NODE_URI_@@MODE MNEMONIC_@@MODE ETHERSCAN_API_KEY:?:ETHERSCAN_API_KEY @@",
    "contracts:deploy:watch": "ldenv -d localhost pnpm _contracts:deploy:watch @@",
    "contracts:verify": "pnpm --filter ./contracts verify",
    "---------------------- RUN FULL LOCAL SETUP ----------------------": "",
    "start:wezterm": "wezterm --config-file dev/wezterm.lua start $PWD",
    "stop": "zellij kill-session $npm_package_name",
    "start": "zellij --layout dev/zellij.kdl a $npm_package_name || zellij --layout dev/zellij.kdl -s $npm_package_name"
  }
}
